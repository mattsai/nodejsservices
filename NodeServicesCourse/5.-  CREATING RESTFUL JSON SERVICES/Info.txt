Lo que hace es detecetar un package json e integrar fastify creando pues la aplicaicÃ³n de fastify : npm init fastify -- --integrate


metadata is communicated through HTTP headers
operation outcomes are communicated with HTTP status codes
The State Transfer part of REST is about shuffling state from clients to server-backends
A REST service should be stateless

 The result argument would hold a JavaScript object, so Fastify would know to set the response Content-Type header to application/json.

 Fastify es vergas

El exprss tambien detecta esa mmda y como le das express algo
ya te genera el error handlig igual que el fastify alaavrga


The Express framework has detected that the response is JSON because res.send was passed an object, and set the headers appropriately.


node -e "http.request('http://localhost:3000/bicycles/1',{method:'POST'},res=>console.log(res.headers,res.statusCode)).end()"

node -e "http.requesttroll'}}))"('http://localhost:3000/bicycles/1',{method:'put',headers:{'content-type':'application/json'}},res=>console.log(res.statusCode,res.headers)).end()

node -e "http.request('http://localhost:3000/('http://localhost:3000/bicycles/1',{method:'put',headers:{'content-t},res=>console.log(res.sype':'application/json'}},res=>console.log(res.statusCode,res.headerstroll'}}))")).end(JSON.stringify({data:{queso:'badon',que:'troll'}}))"

return error o return notFound en fastify y pasa chido :D 


EM EL CATH ES DONDE DA IGUAL DELSI ES UN 
RETURN O ES UN THROW


YA EN ELNORMALITO SI DE AWEBO VA EL REPLY.SEND EN EL FASTIFY AAA ALALALALAAA

if(err.message === 'not found')reply.notFound()
    else reply.send(err)
    return
este este majoer porque al final el return 